// 클래스 정의 : 객체를 추상화해 놓은 것
/*
추상화(abstraction) : 현실세계의 사물을 클래스로 형상화 하는것을 
	말한다. Person클래스는 "사람"의 일반적인 사항을 클래스로 추상화
	하고있다. 	
 */
/*
클래스 선언시 class키워드를 사용한다. 클래스의 첫글자는 반드시 대문자로 
해야한다. 또한 public이라는 접근지정자는 하나의 java파일에 한번만 사용
할 수 있다.
 */
class Npc
{
	// 필드를 정의 : 클래스에서 데이터로 사용
	/*
	 멤버변수 : 클래스에서 주로 속성(데이터)를 표현한다.
	 	사람을 표현한 클래스이므로 나이, 이름 등이 정의되어있다.
	 */
	String name;	// 멤버변수
	int hp;
	
	/*
	 멤버메서드 : 클래스에서 객체의 동작(행위)를 표현한다. 클래스 외부
	 	에서 호출할때 객체의 참조변수를 사용해서 .(닷)으로 호출한다.
	 	또한 멤버변수는 멤버메서드 내에서 즉시 사용할 수 있다.
	 */
	void say()	// 멤버 메서드
	{
		System.out.println("안녕하세요.");
	}
}

public class NpcUse
{
	public static void main(String[] args)
	{
		// 클래스를 이용해 객체 생성
		// - 'NPC'란 설계도(클래스)를 이용해 NPC 객체 만들기
		// 클래스 타입의 변수는 new 를 통해 객체를 생성한다.
		// 클래스 타입의 참조 변수는 스택에, 생성된 객체는 힙에 적재된다.
		// 자료형이 Npc 클래스형인 saraml 변수를 만듬.
		Npc saram1 = new Npc();	// 객체 생성 및 참조변수 선언
		// 필드 접근
		saram1.name = "경비";		// 멤버 변수에 직접 접근. 초기화
		saram1.hp = 100;			// 멤버 변수에 직접 접근. 초기화
		System.out.println(saram1.name + ":" + saram1.hp);	// 출력
		// 메서드 호출
		saram1.say();  // 메서드를 호출
	}
}

// 객체 만들기
// 현실 --> 만들어진 자동차가 실제로 눈 앞에 보임
// 컴퓨터 --> 객체를 메모리에 적제
